
library(shiny) #for Rshiny app to run
library(bslib)
library(dplyr) # data minipluation
library(ggplot2)
library(ggExtra)
library(DT)
library(plotly)
library(scales)

LOCATION_DESC <- sort(unique(annual_monthly_chicken_comparison$LOCATION_DESC))
STATISTICCAT_DESC <- sort(unique(annual_monthly_chicken_comparison$STATISTICCAT_DESC))

ui <- fluidPage(
    titlePanel("Chicken Production by State"),
    
    sidebarLayout(
        sidebarPanel(
            fluidRow(
                column(6, 
                    checkboxGroupInput(
                    "checkbox_filter", 
                    "Select State:",
                    choices = LOCATION_DESC
                    ),
                style = "padding-right: 20px;"
                ),
                 column(6, 
                    selectInput(
                    "STATISTICCAT_DESC_filter", 
                    "Select State:",
                    choices = STATISTICCAT_DESC
                    )
                )
            )
            
        ),
    
        mainPanel(
            fluidRow(
                column(
                    12, 
                    h2('Chicken Production by State'),
                    plotlyOutput("filtered_plot"),
                    p("The head count is a reflection of 'Placement', which mean the chicks were brought to a growing plant before they are later moved to their final position I.E. broiler, hen, ect.")
                    
                ),
                # column(
                #     6,
                #     h4("right panel"),
                #     DTOutput("filtered_table")
                # )
            )
        )
    )
)

server <- function(input, output, session){
    
    filtered_data <- reactive({
        annual_monthly_chicken_comparison %>% 
        filter(LOCATION_DESC %in% input$checkbox_filter,
               STATISTICCAT_DESC %in% input$STATISTICCAT_DESC_filter
               ) %>% 
        arrange(YEAR)
    })
    
    output$filtered_plot <- renderPlotly({
        data <- filtered_data()
        
        p <- data %>% 
        ggplot(aes(
            x = YEAR, 
            y = VALUE, 
            color = FREQ_DESC,
            text = paste0("Year: ", YEAR,
                          "<br>Quantity: ", comma(VALUE),
                          "<br>State: ", LOCATION_DESC
                          )
            ))+
        facet_wrap( ~ LOCATION_DESC)+
        geom_point(size = .1)+
        labs(x = "Year", y = "Head Count")
        

        plotly::ggplotly(p, tooltip = "text")
    })
    
    # output$filtered_table <- renderDT({
    #     filtered_data()
    # })
}


# Run the app
shinyApp(ui, server)

